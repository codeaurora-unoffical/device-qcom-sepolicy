#Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are
#met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
#WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
#ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
#BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

allow qti_init_shell self:capability {
    sys_resource
    net_raw
};

allow qti_init_shell shell_exec:file { getattr read };
allow qti_init_shell self:netlink_route_socket { create bind read write nlmsg_write setopt getattr };
allow qti_init_shell self:udp_socket { create bind read ioctl };
allow qti_init_shell ctl_start_prop:property_service set;
allow qti_init_shell ctl_stop_prop:property_service set;
allow qti_init_shell proc_asound:dir search;

# early eavb
allow qti_init_shell ptpclk_node:chr_file { rw_file_perms };
allow qti_init_shell device:dir { rw_dir_perms };
allow qti_init_shell device:file { create_file_perms };
allow qti_init_shell device:sock_file { create_file_perms };
allow qti_init_shell ptpshm_node:file rw_file_perms;
allow qti_init_shell self:capability sys_nice;
allow qti_init_shell self:capability sys_time;
allow qti_init_shell self:socket create;
allow qti_init_shell gptp_exec:file execute_no_trans;
allow qti_init_shell openavb_harness_exec:file execute_no_trans;
allow qti_init_shell toolbox_exec:file getattr;
allow qti_init_shell self:packet_socket { create_socket_perms };
allowxperm qti_init_shell self:packet_socket ioctl { priv_sock_ioctls unpriv_sock_ioctls ethavb_ptp_ioctls };
allow qti_init_shell self:socket ioctl;
allowxperm qti_init_shell self:socket ioctl { priv_sock_ioctls unpriv_sock_ioctls ethavb_ptp_ioctls };
allow qti_init_shell self:tcp_socket ioctl;
allow qti_init_shell self:tcp_socket create;
allowxperm qti_init_shell self:tcp_socket ioctl { priv_sock_ioctls unpriv_sock_ioctls };
allow qti_init_shell self:unix_dgram_socket { read write };
allow qti_init_shell self:unix_dgram_socket ioctl;
allowxperm qti_init_shell self:unix_dgram_socket ioctl { priv_sock_ioctls unpriv_sock_ioctls ethavb_ptp_ioctls };
allow qti_init_shell vendor_data_file:dir { rw_dir_perms };
allow qti_init_shell ethavb_vendor_data_file:file { create_file_perms };
allow qti_init_shell ethavb_vendor_data_file:dir { rw_dir_perms };
get_prop(qti_init_shell, automotive_ethavb_prop)
