# Copyright (c) 2019 The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#Define Domain
type agmservice_qti, domain;
type agmservice_qti_exec, exec_type, vendor_file_type, file_type;

hal_server_domain_bypass(agmservice_qti, agmservice)

#Allow for transition from init domain to agmservice
init_daemon_domain(agmservice_qti)

# Allow hwbinder call from hal client to server
binder_call(agmservice_client, agmservice_server)
binder_call(agmservice_server, agmservice_client)

# Add hwservice related rules
hal_attribute_hwservice(agmservice, agm_hwservice)

#Allow access to PCM sound card
allow agmservice_qti audio_device:chr_file rw_file_perms;
allow agmservice_qti audio_device:dir r_dir_perms;

#Allow access to agm device nodes
allow agmservice_qti agm_device:chr_file rw_file_perms;
allow agmservice_qti agm_device:dir r_dir_perms;

#allow access to agm crash notificaiton sysfs node
allow agmservice sysfs_agm:file rw_file_perms;
allow agmservice sysfs_agm:dir r_dir_perms ;

#allow acess to wcd_cpe
allow agmservice sysfs_audio:file rw_file_perms;
allow agmservice sysfs_audio:dir r_dir_perms ;

# Add the rule for wfd to access /proc/asound/pcm file
r_dir_file(agmservice_qti, proc_asound)

#Allow ion device access
allow agmservice_qti ion_device:chr_file r_file_perms;

#Allow qipc socket access for servreg communication
allow agmservice_qti self:qipcrtr_socket create_socket_perms_no_ioctl;
allow agmservice_qti self:{ socket qipcrtr_socket } ioctl;
allowxperm agmservice_qti self:{ socket qipcrtr_socket } ioctl msm_sock_ipc_ioctls;

userdebug_or_eng(`
#Allow for property access
  get_prop(agmservice_qti,vendor_audio_debug_prop)
#Allow for pd_locater service access
  get_prop(agmservice_qti, vendor_pd_locater_dbg_prop)
#Allow to dump in /data/vendor/audio/
  allow agmservice_qti vendor_audio_data_file:dir w_dir_perms;
  allow agmservice_qti vendor_audio_data_file:file create_file_perms;
#Allow to access logmask file in /data/vendor
  allow agmservice_qti vendor_data_file:file r_file_perms;
#allow proc_sysrq access for crash dump
  allow agmservice_qti proc_sysrq:file rw_file_perms;
')
