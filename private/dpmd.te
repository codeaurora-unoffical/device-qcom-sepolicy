# Copyright (c) 2017, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#dpmd as domain
#type dpmd, domain,mlstrustedsubject;

typeattribute dpmd coredomain;

#type dpmd_exec, exec_type, file_type, file_type;
#file_type_auto_trans(dpmd, socket_device, dpmwrapper_socket);
#init_daemon_domain(dpmd)
domain_auto_trans(init, dpmd_exec, dpmd)
net_domain(dpmd)

allow dpmd {
    dpmd_exec
    system_file
}:file x_file_perms;

#allow dpmd to access dpm_data_file
allow dpmd dpmd_data_file:file create_file_perms;
allow dpmd dpmd_data_file:dir create_dir_perms;

#allow dpmd persist_dpm_prop:file r_file_perms;

#allow dpmd sysfs_wake_lock:file rw_file_perms;

#allow dpmd sysfs_data:dir r_dir_perms;

#allow dpmd sysfs_data:file r_file_perms;

r_dir_file(dpmd,proc_net)

allow dpmd self:capability {
    setuid
    setgid
    dac_override
    net_raw chown
    fsetid
    net_admin
    sys_module
};

#socket, self
#allow dpmd smem_log_device:chr_file rw_file_perms;
#wakelock_use(dpmd)

#set_prop(dpmd, system_prop)
#set_prop(dpmd, ctl_default_prop)
#misc.
allow dpmd shell_exec:file rx_file_perms;

#permission to unlink dpmwrapper socket
allow dpmd socket_device:dir remove_name;

#permission to communicate with cnd_socket for installing iptable rules
#unix_socket_connect(dpmd, cnd, cnd);

#allow dpmd to create socket
allow dpmd self:socket create_socket_perms_no_ioctl;
allow dpmd self:{ netlink_socket netlink_generic_socket } create_socket_perms_no_ioctl;

#allow dpmd to write to /proc/net/sys
allow dpmd proc_net:file write;

#allow dpmd get appname and use inet socket.
#dpmd_socket_perm(appdomain)
#dpmd_socket_perm(system_server)
#dpmd_socket_perm(mediaserver)
#dpmd_socket_perm(mtp)
#dpmd_socket_perm(wfdservice)
#dpmd_socket_perm(drmserver)
#dpmd_socket_perm(netd)

#explicitly allow udp socket permissions for appdomain
#allow dpmd appdomain:udp_socket rw_socket_perms;

#Allow dpmd to acquire lock for iptables
#allow dpmd system_file:file lock;

#Allow dpmd to connect to hal_dpmQMiMgr
#allow dpmd hal_dpmqmi_hwservice:hwservice_manager find;
#get_prop(dpmd, hwservicemanager_prop)
#binder_call(dpmd,hal_dpmQmiMgr)
#hwbinder_use(dpmd)

#diag
#userdebug_or_eng(`
#    diag_use(dpmd)
#')
